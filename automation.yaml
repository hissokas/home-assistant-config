###################
# Washing Machine #
###################
# Washer boolean turns on after power for 30 seconds.
# If the lid is open after washer boolean on for 00:03:00, we notify.
# If the washer has no power for 00:02:30 washer boolean turns off

#Set washer_running boolean to on after 30 seconds of power
- alias: Set washer boolean to running
  trigger:
    platform: numeric_state
    entity_id: sensor.sonoff_pow_power
    above: 3
    for:
      seconds: 30
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.washer_running

#Set washer_running boolean to off after 2:30 minutes of no power
- alias: Set washer boolean to not running
  trigger:
    platform: numeric_state
    entity_id: sensor.sonoff_pow_power
    below: 1
    for:
      minutes: 2
      seconds: 30
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.washer_running

#Notify when lid open for 3 minutes and washer_boolean on
- alias: Notify if Washer Running with Lid Open
  trigger:
    platform: state
    entity_id: input_boolean.washer_running
    to: 'on'
    for:
      minutes: 3
  condition:
    condition: state
    entity_id: sensor.washing_machine_lid
    state: 'true'
  action:
    - service: notify.home_assistant
      data_template:
        message: I think Bethany left the washer lid open..

#Make sure washing machine sonoff is always on..
- alias: Ensure washing machine outlet is on
  trigger:
    platform: state
    entity_id: switch.washing_machine
    to: 'off'
  action:
    - service: homeassistant.turn_on
      entity_id: switch.washing_machine


#Workaround for fan speed on appdaemon dashboard
#Set value of input select when fan speed changed on switch
- alias: Set Master Bedroom Ceiling Fan Speed Selector
  trigger:
    platform: state
    entity_id: fan.master_bedroom_ceiling_fan_level
  action:
     service: input_select.select_option
     data_template:
       entity_id: input_select.master_bedroom_ceiling_fan_speed
       option: '{{ states.fan.master_bedroom_ceiling_fan_level.attributes.speed }}'

#Workaround for fan speed on appdaemon dashboard
#Set fan speed when input changed
- alias: Set Master Bedroom Ceiling Fan Speed
  trigger:
    platform: state
    entity_id: input_select.master_bedroom_ceiling_fan_speed
  action:
     service: fan.set_speed
     entity_id: fan.master_bedroom_ceiling_fan_level
     data_template:
       speed: '{{ states.input_select.master_bedroom_ceiling_fan_speed.state }}'

- alias: "Set dark theme for the night"
  initial_state: on
  trigger:
    - platform: time
      at: '21:00'
  action:
    - service: frontend.set_theme
      data:
        name: midnight-remake

- alias: "Set light theme for day"
  initial_state: on
  trigger:
    - platform: time
      at: '9:00'
  action:
    - service: frontend.set_theme
      data:
        name: default

- alias: "Package Delivered"
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.deliveries_today
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Package delivered...

#Switch
- alias: "Arlo Arm"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.security_camera_automation
    state: 'on'
  action:
    service: script.turn_on
    entity_id: script.arlo_arm

#Switch
- alias: "Arlo Disarm"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'on'
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.security_camera_automation
    state: 'on'
  action:
    service: script.turn_on
    entity_id: script.arlo_disarm

- alias: "Turn off House"
  trigger:
    platform: state
    entity_id: group.trackers
    to: not_home
    for:
      minutes: 10
  action:
    service: homeassistant.turn_on
    entity_id: script.home_empty

# Follow master bedroom lamps when guest automation active
- alias: "Turn On Guest Lamp When Master Lamps Turn On"
  trigger:
    platform: state
    entity_id: group.master_bedroom_lamps
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.guest_automation
    state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: switch.guest_lamp

- alias: "Turn On Living Room Lamps When Master Lamps Turn On"
  trigger:
    platform: state
    entity_id: group.master_bedroom_lamps
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.guest_automation
    state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: group.living_room_lamps

# Follow master bedroom lamps when guest automation active
- alias: "Turn Off Guest Lamp When Master Lamps Turn Off"
  trigger:
    platform: state
    entity_id: group.master_bedroom_lamps
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.guest_automation
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.guest_lamp

- alias: "Turn Off Living Room Lamps When Master Lamps Turn Off"
  trigger:
    platform: state
    entity_id: group.master_bedroom_lamps
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.guest_automation
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: group.living_room_lamps

- alias: "Arrived at Home"
  trigger:
    platform: state
    entity_id: group.trackers
    to: home
  action:
    service: homeassistant.turn_on
    entity_id: script.home_occupied

- alias: "Turn on lamps when we get home"
  trigger:
    platform: state
    entity_id: group.trackers
    from: not_home
    to: home
  condition:
    condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
    service: homeassistant.turn_on
    entity_id: group.master_bedroom_lamps

- alias: "Button Press On!"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.office_toggle_switch
    to: "true"
  action:
    service: homeassistant.turn_on
    entity_id: group.andrew_desk

- alias: "Button Press Off!"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.office_toggle_switch
    to: "false"
  action:
    service: homeassistant.turn_off
    entity_id: group.andrew_desk

- alias: "Mount /Plex"
  initial_state: on
  trigger:
    platform: state
    entity_id: switch.nas
    from: 'off'
    to: 'on'
    for:
      seconds: 60
  action:
    service: shell_command.mount_plex

- alias: "Unmount /Plex"
  initial_state: on
  trigger:
    platform: state
    entity_id: switch.nas
    from: 'on'
    to: 'off'
    for:
      seconds: 120
  action:
    service: shell_command.umount_plex

#- id: ac_broken_cool
- alias: "Notify Andrew when AC BREAKS"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'cool'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        below: '68'
  action:
    - service: notify.home_assistant
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_operation_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'

#- id: ac_broken_heat
- alias: "Notify Andrew when AC BREAKS"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'heat'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        above: '72'
  action:
    - service: notify.home_assistant
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_operation_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'

#- id: ac_setpoint_change
- alias: "Notify Andrew when AC setpoint changes"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Setpoint Trigger: {{ trigger.to_state.state }}. Mode: {{ states.sensor.thermostat_operating_mode.state }}

#- id: ac_mode_change
- alias: "Notify Andrew when AC Mode changes"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_operating_mode
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Mode Trigger: {{ states.sensor.thermostat_setpoint.state }}. Mode: {{ trigger.to_state.state }}

- alias: 'Alarm Clock'
  trigger:
    platform: time
    minutes: /5
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.alarm_clock_automation
        state: 'on'
      - condition: template
        value_template: '{{ now().strftime("%H:%M") == states.input_select.alarm_clock.state }}'
  action:
    service: script.turn_on
    entity_id: script.andrew_wakeup


####################
# Mom and Dad Gate #
####################

- alias: "Mom and Dad Gate Notify"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.mom_and_dad_gate
    from: 'closed'
    to: 'open'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Gate Opened

- alias: "Mom and Dad Gate Notify"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.mom_and_dad_gate
    from: 'open'
    to: 'closed'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Gate Closed

- alias: "Desk Drawer Open Toggle"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.desk_keyboard_drawer
    from: 'closed'
    to: 'open'
  action:
    service: homeassistant.toggle
    entity_id: group.andrew_desk

#######
# NAS #
#######

- alias: "NAS Morning On"
  initial_state: 'on'
  trigger:
    platform: time
    at: '05:59:30'
  action:
    service: switch.turn_on
    entity_id: switch.nas

- alias: "NAS Morning Off"
  initial_state: 'on'
  trigger:
    platform: time
    at: '08:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.nas
