#Workaround for fan speed on appdaemon dashboard
#Set value of input select when fan speed changed on switch
- alias: Set Master Bedroom Ceiling Fan Speed Selector
  trigger:
    platform: state
    entity_id: fan.master_bedroom_ceiling_fan_level
  action:
     service: input_select.select_option
     data_template:
       entity_id: input_select.master_bedroom_ceiling_fan_speed
       option: '{{ states.fan.bedroom_ceiling_fan_level.attributes.speed }}'

#Workaround for fan speed on appdaemon dashboard
#Set fan speed when input changed
- alias: Set Master Bedroom Ceiling Fan Speed
  trigger:
    platform: state
    entity_id: input_select.master_bedroom_ceiling_fan_speed
  action:
     service: fan.set_speed
     entity_id: fan.bedroom_ceiling_fan_level
     data_template:
       speed: '{{ states.input_select.master_bedroom_ceiling_fan_speed.state }}'

- alias: "Set dark theme for the night"
  initial_state: on
  trigger:
    - platform: time
      at: '21:00'
  action:
    - service: frontend.set_theme
      data:
        name: darkred

- alias: "Set light theme for day"
  initial_state: on
  trigger:
    - platform: time
      at: '9:00'
  action:
    - service: frontend.set_theme
      data:
        name: default

- alias: "Package Delivered"
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.deliveries_today
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Package delivered...
  
#Switch
- alias: "Arlo Arm"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'off'
    to: 'on'
  action:
    service: script.turn_on
    entity_id: script.arlo_arm

#Switch
- alias: "Arlo Disarm"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'on'
    to: 'off'
  action:
    service: script.turn_on
    entity_id: script.arlo_disarm

#Uses the above switches to arm cameras
- alias: "Camera Arm"
  trigger:
    platform: state
    entity_id: group.trackers
    to: not_home
    for:
      minutes: 1
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.arlo_status

- alias: "Camera Disarm"
  trigger:
    platform: state
    entity_id: group.trackers
    to: home
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.arlo_status

- alias: "Button Press On!"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.office_toggle_switch
    to: "true"
  action:
    service: homeassistant.turn_on
    entity_id: group.office

- alias: "Button Press Off!"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.office_toggle_switch
    to: "false"
  action:
    service: homeassistant.turn_off
    entity_id: group.office

- alias: "Mount /Plex"
  initial_state: on
  trigger:
    platform: state
    entity_id: switch.nas
    from: 'off'
    to: 'on'
    for:
      seconds: 60
  action:
    service: shell_command.mount_plex

- alias: "Unmount /Plex"
  initial_state: on
  trigger:
    platform: state
    entity_id: switch.nas
    from: 'on'
    to: 'off'
    for:
      seconds: 120
  action:
    service: shell_command.umount_plex

#- id: ac_broken_cool
- alias: "Notify Andrew when AC BREAKS"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'cool'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        below: '68'
  action: 
    - service: notify.home_assistant
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_operation_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'

#- id: ac_broken_heat
- alias: "Notify Andrew when AC BREAKS"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'heat'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        above: '72'
  action:
    - service: notify.home_assistant
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_operation_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'
   
#- id: ac_setpoint_change
- alias: "Notify Andrew when AC setpoint changes"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Setpoint Trigger: {{ trigger.to_state.state }}. Mode: {{ states.sensor.thermostat_operating_mode.state }}

#- id: ac_mode_change
- alias: "Notify Andrew when AC Mode changes"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_operating_mode
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Mode Trigger: {{ states.sensor.thermostat_setpoint.state }}. Mode: {{ trigger.to_state.state }}

- alias: 'Alarm Clock'
  trigger:
    platform: time
    minutes: /5
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.alarm_clock_automation
        state: 'on'
      - condition: template
        value_template: '{{ now().strftime("%H:%M") == states.input_select.alarm_clock.state }}'
  action:
    service: script.turn_on
    entity_id: script.andrew_wakeup


####################
# Mom and Dad Gate #
####################

- alias: "Mom and Dad Gate Notify"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.mom_and_dad_gate
    from: 'closed'
    to: 'open'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Gate Opened

- alias: "Mom and Dad Gate Notify"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.mom_and_dad_gate
    from: 'open'
    to: 'closed'
  action:
    - service: notify.home_assistant
      data_template:
        message: >
          Gate Closed
